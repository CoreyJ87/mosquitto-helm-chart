apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mosquitto.fullname" . }}
  labels:
    {{- include "mosquitto.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "mosquitto.fullname" . }}
  selector:
    matchLabels:
      {{- include "mosquitto.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mosquitto.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.auth.enabled }}
      initContainers:
        - name: setup-auth
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - /bin/sh
            - -c
            - |
              {{- if .Values.auth.users }}
              touch /mosquitto/config/passwords
              {{- range .Values.auth.users }}
              mosquitto_passwd -b /mosquitto/config/passwords {{ .username }} {{ .password }}
              {{- end }}
              chown 1883:1883 /mosquitto/config/passwords
              chmod 600 /mosquitto/config/passwords
              {{- else }}
              echo "No users defined for authentication"
              exit 1
              {{- end }}
          volumeMounts:
            - name: auth-config
              mountPath: /mosquitto/config
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mqtt
              containerPort: {{ .Values.service.mqtt.port }}
              protocol: TCP
            - name: mqtts
              containerPort: {{ .Values.service.mqtts.port }}
              protocol: TCP
            - name: websockets
              containerPort: {{ .Values.service.websockets.port }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /mosquitto/config/mosquitto.conf
              subPath: mosquitto.conf
            {{- if .Values.auth.enabled }}
            - name: auth-config
              mountPath: /mosquitto/config/passwords
              subPath: passwords
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /mosquitto/data
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "mosquitto.fullname" . }}-config
        {{- if .Values.auth.enabled }}
        - name: auth-config
          emptyDir: {}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "mosquitto.fullname" . }}-data
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 